server:
  port: 443
  ssl:
    key-store-type: PKCS12
    key-store: classpath:keystore.p12
    key-store-password: qazwsx
    key-alias: springboot
    enabled: true

cloud:
  dbase-host: localhost:5432
  rabbitmq-host: localhost
  elastic-host: localhost
  keycloak-host: localhost

spring:
  cloud:
    aws:
      credentials:
        access-key: admin
        secret-key: password
      s3:
        endpoint: http://localhost:9000
        bucket: bookreactapp
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://${cloud.keycloak-host}:8081/realms/myrealm
      client:
        registration:
          keycloak:
            client-id: react-app-client
            client-secret: BBSRN6pWa1KLP6J9Y3gxRaZZ3bDuHVii
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:3000/callback
            scope: openid,profile,email
        provider:
          keycloak:
            authorization-uri: http://${cloud.keycloak-host}:8081/realms/myrealm/protocol/openid-connect/auth
            token-uri: http://${cloud.keycloak-host}:8081/realms/myrealm/protocol/openid-connect/token
            user-info-uri: http://${cloud.keycloak-host}:8081/realms/myrealm/protocol/openid-connect/userinfo
            jwk-set-uri: http://${cloud.keycloak-host}:8081/realms/myrealm/protocol/openid-connect/certs
            user-name-attribute: preferred_username
  elasticsearch:
    uris: http://${cloud.elastic-host}:9200
    username: elastic
    password: password
    repositories:
      enabled: false

  application:
    name: BookReactApp
  r2dbc:
    url: r2dbc:postgresql://${cloud.dbase-host}/books
    username: b2b
    password: b2b
    pool:
      max-size: 20
      initial-size: 5
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
    url: jdbc:postgresql://${cloud.dbase-host}/books
    user: b2b
    password: b2b
  servlet:
    multipart:
      max-file-size: 20MB
      max-request-size: 20MB
  codec:
    max-in-memory-size: 20MB
  rabbitmq:
    host: ${cloud.rabbitmq-host}
    port: 5672
    username: book
    password: password
  topic-exchange:
    name: producer
  books:
    queue:
      name: books
      routing-key: books

springdoc:
  api-docs:
    enabled: true
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html

aws:
  java:
    v1:
      disableDeprecationAnnouncement: true