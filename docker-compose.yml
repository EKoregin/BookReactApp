services:
  app:
    image: bookreactapp:latest
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      SPRING_PROFILES_ACTIVE: cloud
      DB_HOST: books_db
      RABBITMQ_HOST: rabbitmq
      ELASTIC_HOST: elasticsearch
    ports:
      - "8080:8080"
    depends_on:
      books_db:
        condition: service_healthy
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"    # Порт для AMQP
      - "15672:15672"  # Порт для веб-интерфейса
    environment:
      RABBITMQ_DEFAULT_USER: book         # Имя пользователя по умолчанию
      RABBITMQ_DEFAULT_PASS: password     # Пароль по умолчанию
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq   # Хранение данных RabbitMQ
    networks:
      - app-network

  books_db:
    image: postgres
    container_name: books_db
    environment:
      POSTGRES_USER: b2b
      POSTGRES_PASSWORD: b2b
      POSTGRES_DB: books
      PGDATA: /var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U b2b -d books" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - pg_data:/var/lib/postgresql/data
    restart: always
    networks:
      - app-network

  elasticsearch:
    image: elasticsearch:7.17.28
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ELASTIC_PASSWORD=password
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    networks:
      - app-network

  kibana:
    image: kibana:7.17.28
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  pg_data:
  rabbitmq_data:
  esdata:
